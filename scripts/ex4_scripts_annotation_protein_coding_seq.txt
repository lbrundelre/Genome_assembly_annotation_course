srun --cpus-per-task=1 --mem-per-cpu=1G --time=01:00:00 --pty bash

5.
module load SequenceAnalysis/GenePrediction/maker/2.31.9;
gff3_merge -d pilon_master_datastore_index.log
fasta_merge -d pilon_master_datastore_index.log

6. 
maker_map_ids --prefix Cvi_ pilon.all.gff > pilon.all.id.map

map_fasta_ids pilon.all.id.map pilon.all.maker.proteins.fasta # ersetzt ID anhand von map file
map_fasta_ids pilon.all.id.map pilon.all.maker.transcripts.fasta
map_gff_ids pilon.all.id.map pilon.all.gff


7. 
#!/usr/bin/env bash

#SBATCH --time=1-00:00:00
#SBATCH --mem=30G
#SBATCH --cpus-per-task=10
#SBATCH --job-name=Blast_MAKER
#SBATCH --mail-user=livbrundel@gmail.com
#SBATCH --mail-type=fail,end
#SBATCH --output=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/Blast_MAKER_%j.o
#SBATCH --error=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/Blast_MAKER_%j.e

# Define paths to directories
WORKDIR=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation

# Load Module
module load Blast/ncbi-blast/2.9.0+

# Go to working directory
cd $WORKDIR

# Create blast db
makeblastdb -in /data/courses/assembly-annotation-course/CDS_annotation/uniprot-plant_reviewed.fasta -dbtype prot -out uniprot-plant_reviewed

# Run blastp once for flye and once for canu --> comment out creation of database when doing it the second time!
blastp -query ${WORKDIR}/flye/pilon.maker.output/pilon.all.maker.proteins.fasta -db uniprot-plant_reviewed -num_threads 10 -outfmt 6 -evalue 1e-10 > ${WORKDIR}/flye/pilon.maker.output/pilon_blastprotein_output

#blastp -query ${WORKDIR}/canu/pilon.maker.output/pilon.all.maker.proteins.fasta -db uniprot-plant_reviewed -num_threads 10 -outfmt 6 -evalue 1e-10 > ${WORKDIR}/canu/pilon.maker.output/pilon_blastprotein_output



8. srun

module load SequenceAnalysis/GenePrediction/maker/2.31.9

maker_functional_fasta /data/courses/assembly-annotation-course/CDS_annotation/uniprot-plant_reviewed.fasta pilon_blastprotein_output pilon.all.maker.proteins.fasta > pilon.all.maker.annotated.proteins.fasta

maker_functional_gff /data/courses/assembly-annotation-course/CDS_annotation/uniprot-plant_reviewed.fasta pilon_blastprotein_output pilon.all.gff > pilon.all.maker.annotated.proteins.gff






BUSCO
cd /data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/annotation_QC/
mkdir BUSCO
cd BUSCO
mkdir canu flye

#!/usr/bin/env bash

#SBATCH --time=1-00:00:00
#SBATCH --mem=16G
#SBATCH --cpus-per-task=4
#SBATCH --job-name=BUSCO_MAKER
#SBATCH --mail-user=livbrundel@gmail.com
#SBATCH --mail-type=fail,end
#SBATCH --output=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/annotation_QC/BUSCO_MAKER_flye_%j.o
#SBATCH --error=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/annotation_QC/BUSCO_MAKER_flye_%j.e

# Define paths to directories
WORKDIR=/data/users/lbrun/assembly_annotation_course

# For flye
INPUTFILE=${WORKDIR}/annotation/protein_coding_seq/automatic_annotation/flye/pilon.maker.output/pilon.all.maker.annotated.proteins.fasta
OUTPATH=${WORKDIR}/annotation/protein_coding_seq/automatic_annotation/annotation_QC/BUSCO/flye

# For canu
#INPUTFILE=${WORKDIR}/annotation/protein_coding_seq/automatic_annotation/canu/pilon.maker.output/pilon.all.maker.annotated.proteins.fasta
#OUTPATH=${WORKDIR}/annotation/protein_coding_seq/automatic_annotation/annotation_QC/BUSCO/canu

# Go to working directory
cd $OUTPATH

# Run BUSCO
singularity exec \
--bind $WORKDIR \
/data/courses/assembly-annotation-course/containers2/busco_v5.1.2_cv1.sif \
busco -i $INPUTFILE -l brassicales_odb10 -o gene_annotation -m proteins -c 4 --out_path $OUTPATH --download_path $OUTPATH




STAR
1.
module load UHTS/Assembler/cufflinks/2.2.1;
gffread pilon.all.gff -o pilon.all.gtf

2.
mkdir trinity
cd trinity
mkdir trinity_flye trinity_canu



#!/usr/bin/env bash

#SBATCH --time=03:00:00
#SBATCH --mem=16G
#SBATCH --cpus-per-task=4
#SBATCH --job-name=genome_index_STAR
#SBATCH --mail-user=livbrundel@gmail.com
#SBATCH --mail-type=fail,end
#SBATCH --output=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/genome_index_STAR_%j.o
#SBATCH --error=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/genome_index_STAR_%j.e

# Path to directory
WORKDIR=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation

# Paths for flye
GENOMEDIR=${WORKDIR}/trinity/trinity_flye
GENOMEFASTAFILE=/data/users/lbrun/assembly_annotation_course/polishing/flye/pilon.fasta
GTFFILE=${WORKDIR}/flye/pilon.maker.output/pilon.all.gtf

# Paths for canu
#GENOMEDIR=${WORKDIR}/trinity/trinity_canu
#GENOMEFASTAFILE=/data/users/lbrun/assembly_annotation_course/polishing/canu/pilon.fasta
#GTFFILE=${WORKDIR}/canu/pilon.maker.output/pilon.all.gtf


# Load module
module add UHTS/Aligner/STAR/2.7.9a

# Run for flye and canu
STAR --runThreadN 4 --runMode genomeGenerate --genomeDir $GENOMEDIR --genomeFastaFiles $GENOMEFASTAFILE --sjdbGTFfile $GTFFILE



3.
#!/usr/bin/env bash

#SBATCH --time=03:00:00
#SBATCH --mem=16Gcd
#SBATCH --cpus-per-task=4
#SBATCH --job-name=map_STAR
#SBATCH --mail-user=livbrundel@gmail.com
#SBATCH --mail-type=fail,end
#SBATCH --output=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/map_STAR_%j.o
#SBATCH --error=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/map_STAR_%j.e


# Path to directory
WORKDIR=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation
READ1=/data/courses/assembly-annotation-course/raw_data/Cvi-0/participant_2/RNAseq/ERR754075_1.fastq.gz
READ2=/data/courses/assembly-annotation-course/raw_data/Cvi-0/participant_2/RNAseq/ERR754075_2.fastq.gz

# Paths for flye
GENOMEDIR=${WORKDIR}/trinity/trinity_flye

# Paths for canu
#GENOMEDIR=${WORKDIR}/trinity/trinity_canu

# Load module
module add UHTS/Aligner/STAR/2.7.9a

STAR
--runThreadN 4 --genomeDir $GENOMEDIR --readFilesIn  <(zcat ${READ1}) <(zcat ${READ2})
--outFileNamePrefix ${GENOMEDIR}/RNA_map 
--outSAMtype BAM SortedByCoordinate
--outFilterMultimapNmax 10
--outFilterMismatchNoverLmax 0.01 
--alignIntronMax 60000 


SALMON

2.
mkdir annotation_QC
cd annotation_QC
mkdir SALMON
cd SALMON
mkdir canu flye


#!/usr/bin/env bash

#SBATCH --time=03:00:00
#SBATCH --mem=16G
#SBATCH --cpus-per-task=4
#SBATCH --job-name=index_Salmon
#SBATCH --mail-user=livbrundel@gmail.com
#SBATCH --mail-type=fail,end
#SBATCH --output=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/index_Salmon_%j.o
#SBATCH --error=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/index_Salmon_%j.e

# Define paths to directories
DATADIR=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation
CONTAINER=/software/singularity/containers

# Input flye or canu
INPUTFILE=${DATADIR}/flye/pilon.maker.output/pilon.all.maker.transcripts.fasta
#INPUTFILE=${DATADIR}/canu/pilon.maker.output/pilon.all.maker.transcripts.fasta


# Go to working directory of flye or canu
cd ${DATADIR}/annotation_QC/Salmon/flye
#cd ${DATADIR}/annotation_QC/Salmon/canu

singularity exec \
--bind $DATADIR \
--bind $CONTAINER \
$CONTAINER/salmon-1.7.0-1.ubuntu18.sif \
salmon index -t $INPUTFILE -i transcript_index -k 31




3.
#!/usr/bin/env bash

#SBATCH --time=03:00:00
#SBATCH --mem=16G
#SBATCH --cpus-per-task=4
#SBATCH --job-name=quant_Salmon
#SBATCH --mail-user=livbrundel@gmail.com
#SBATCH --mail-type=fail,end
#SBATCH --output=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/quant_Salmon_%j.o
#SBATCH --error=/data/users/lbrun/assembly_annotation_course/annotation/protein_coding_seq/automatic_annotation/quant_Salmon_%j.e

# Define paths to directories
DATADIR=/data/users/lbrun/assembly_annotation_course
CONTAINER=/software/singularity/containers

# Define path to reads
READ1=${DATADIR}/participant_2/RNAseq/ERR754075_1.fastq.gz 
READ2=${DATADIR}/participant_2/RNAseq/ERR754075_2.fastq.gz 


# Go to working directory of flye or canu
cd ${DATADIR}/annotation/protein_coding_seq/automatic_annotation/annotation_QC/Salmon/flye
#cd ${DATADIR}/annotation/protein_coding_seq/automatic_annotation/annotation_QC/Salmon/canu


singularity exec \
--bind $DATADIR \
--bind $CONTAINER \
$CONTAINER/salmon-1.7.0-1.ubuntu18.sif \
salmon quant -i transcript_index -l A -1 <(zcat $READ1) -2 <(zcat $READ2) --validateMappings -o transcript_quant




TO USE IN IGV (not done yet)
#!/usr/bin/env bash

#SBATCH --time=1-00:00:00
#SBATCH --mem=16G
#SBATCH --cpus-per-task=4
#SBATCH --job-name=BAM_index_canu
#SBATCH --mail-user=sara.kraettli@students.unibe.ch
#SBATCH --mail-type=fail,end
#SBATCH --output=/data/users/skraettli/assembly_annotation_course/RNAseq_mapping/output_BAM_index_canu_%j.o
#SBATCH --error=/data/users/skraettli/assembly_annotation_course/RNAseq_mapping/error_BAM_index_canu_%j.e
#SBATCH --partition=pcourseassembly

# Define paths to directories
WORKDIR=/data/users/skraettli/assembly_annotation_course/RNAseq_mapping/canu

# Go to working directory
cd $WORKDIR/

# Add module
module load UHTS/Analysis/samtools/1.10

# Create BAM index
samtools index canuAligned.sortedByCoord.out.bam